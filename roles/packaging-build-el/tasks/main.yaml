- name: Install build requirements with yum
  shell: yum-builddep -y tools/packages/rpm/contrail/contrail.spec
  args:
    chdir: "{{ ansible_env.HOME }}/{{ packaging.target_dir }}"
  become: True
  become_user: root

- name: Fetch third-party packages
  shell: python fetch_packages.py
  args:
    chdir: "{{ ansible_env.HOME }}/{{ packaging.target_dir }}/third_party/"

- name: Get the kernel-devel version
  command: rpm -q --qf "%{VERSION}-%{RELEASE}.%{ARCH}" kernel-devel
  register: kver

- name: Build binary & source packages for contrail-vnc
  shell: |
    rpmbuild \
      --define '_sbtop {{ ansible_env.HOME }}/{{ packaging.target_dir }}' \
      --define "_opt production" \
      --define "_kVers {{ kver.stdout }}" \
      --define "_buildTag {{ zuul.change }}.{{ zuul.patchset }}" \
      --define "_srcVer {{ packaging.version.upstream }}" \
      -ba tools/packages/rpm/contrail/contrail.spec
  args:
    chdir: "{{ ansible_env.HOME }}/{{ packaging.target_dir }}"
  environment:
    SCONSFLAGS: "-j {{ ansible_processor_vcpus }} --opt=production"

- name: Build binary & source packages for contrail-nodemgr
  shell: |
    rpmbuild \
      --define '_topdir {{ ansible_env.HOME }}/{{ packaging.target_dir }}' \
      --define '_builddir {{ ansible_env.HOME }}/{{ packaging.target_dir }}/controller' \
      --define "_buildTag {{ zuul.change }}.{{ zuul.patchset }}" \
      --define "_srcVer {{ packaging.version.upstream }}" \
      -ba {{ ansible_env.HOME }}/{{ packaging.target_dir }}/tools/packaging/common/rpm/contrail-nodemgr.spec
  args:
    chdir: "{{ ansible_env.HOME }}/{{ packaging.target_dir }}/controller"

- name: Build binary & source packages for contrail-openstack-{{ item }}
  shell: |
    rpmbuild \
      --define "_topdir {{ ansible_env.HOME }}/{{ packaging.target_dir }}/" \
      --define "_buildTag {{ zuul.change }}.{{ zuul.patchset }}" \
      --define "_srcVer {{ packaging.version.upstream }}" \
      --define "_skuTag mitaka" \
      -ba {{ ansible_env.HOME }}/{{ packaging.target_dir }}/tools/packaging/common/rpm/contrail-openstack-{{ item }}.spec
  args:
    chdir: "{{ ansible_env.HOME }}/{{ packaging.target_dir }}/controller"
  with_items:
    - analytics
    - control
    - config-common
    - config
    - vrouter
    - webui

- name: Build binary & source packages for contrail-{{ item }}
  shell: |
    rpmbuild \
      --define "_topdir {{ ansible_env.HOME }}/{{ packaging.target_dir }}/" \
      --define "_buildTag {{ zuul.change }}.{{ zuul.patchset }}" \
      --define "_srcVer {{ packaging.version.upstream }}" \
      --define "_skuTag mitaka" \
      -ba {{ ansible_env.HOME }}/{{ packaging.target_dir }}/tools/packaging/common/rpm/contrail-{{ item }}.spec
  args:
    chdir: "{{ ansible_env.HOME }}/{{ packaging.target_dir }}"
  with_items:
    - utils
    - vrouter-init
    - setup

- name: Build binary & source packages for neutron-plugin-contrail
  shell: |
    rpmbuild \
      --define "_topdir {{ ansible_env.HOME }}/{{ packaging.target_dir }}/" \
      --define "_buildTag {{ zuul.change }}.{{ zuul.patchset }}" \
      --define "_srcVer {{ packaging.version.upstream }}" \
      --define "_skuTag mitaka" \
      -ba {{ ansible_env.HOME }}/{{ packaging.target_dir }}/tools/packaging/common/rpm/neutron-plugin-contrail.spec
  args:
    chdir: "{{ ansible_env.HOME }}/{{ packaging.target_dir }}"
 
- name: Install nodejs 0.10.35
  yum:
    name: nodejs-0.10.35-1contrail.el7
  become: true
  become_user: root

- name: Build binary packages for Contrail WebUI
  shell: |
    make package REPO=../{{ item }}
    rpmbuild \
      --define "_builddir {{ ansible_env.HOME }}/{{ packaging.target_dir }}/BUILD" \
      --define "_buildTag {{ zuul.change }}.{{ zuul.patchset }}" \
      --define "_srcVer {{ packaging.version.upstream }}" \
      --bb {{ ansible_env.HOME }}/{{ packaging.target_dir }}/tools/packaging/common/rpm/{{ item }}.spec
  args:
    chdir: "{{ ansible_env.HOME }}/{{ packaging.target_dir }}/contrail-web-core"
  with_items:
    - contrail-web-core
    - contrail-web-controller

- name: Get a list of packages
  shell: ls -l {{ansible_env.HOME }}/rpmbuild/RPMS/x86_64/ {{ansible_env.HOME }}/rpmbuild/SRPMS/ || /bin/true

